#!/bin/bash

_print_help() {
  cat <<HEREDOC
STS Broker CLI
Usage: stsbroker <command> [<args>]
  ${_ME} policies                   Retrieve manged polices available for request.
  ${_ME} request                    Perform a permission request. "permission_request.json" file must be within same directory.
  ${_ME} retrieve                   Assume temporary credentials.
      ${_ME} -p | --profile         AWS profile [Required].
      ${_ME} -c | --console         Pass this option if you want direct access to the AWS Management Console.

  ${_ME} Global parameters:
    ${_ME} -f | --federated       Pass this option if you are sigining in with a federated user. "hostedui.json" file must be within same directory.

  ${_ME} -h | --help                Usage help. Show this screen.
HEREDOC
}

_initialize(){
  export api_url=$(aws cloudformation describe-stacks --stack-name sts-broker --query "Stacks[0].Outputs[?OutputKey=='STSBrokerAPI'].OutputValue" --output text --profile stsbroker --region us-east-2)

  export user_pool_id=$(aws cloudformation describe-stacks --stack-name sts-broker --query "Stacks[0].Outputs[?OutputKey=='CognitoUserPoolID'].OutputValue" --output text --profile stsbroker --region us-east-2)

  export user_pool_client_id=$(aws cloudformation describe-stacks --stack-name sts-broker --query "Stacks[0].Outputs[?OutputKey=='CognitoUserPoolClientID'].OutputValue" --output text --profile stsbroker --region us-east-2)
}

_export(){
    echo "Retrieving temporary credentials from STS broker..."

    if [ -z $2 ]
    then
      echo "Profile name not present."
      return 1
    fi

    if [[ "${1:-}" =~ ^-f|--federated$ ]]
    then
      credentials=`cognitocurl --cognitoclient $user_pool_client_id --userpool $user_pool_id --hostedui hostedui.json --run "curl -X GET $api_url'credentials'"`
    else
      credentials=`cognitocurl --cognitoclient $user_pool_client_id --userpool $user_pool_id --run "curl -X GET $api_url'credentials'"`
    fi

    if [ ${#credentials} -le 5 ]
    then
      echo "There are no current temporary credentials available."
    else
      aws configure set aws_access_key_id $(echo "$credentials" | jq -r '.credentials.AccessKeyId') --profile $2
      aws configure set aws_secret_access_key $(echo "$credentials" | jq -r '.credentials.SecretAccessKey') --profile $2
      aws configure set aws_session_token $(echo "$credentials" | jq -r '.credentials.SessionToken') --profile $2

      export SIGNIN_URL=$(echo "$credentials" | jq -r '.signin_url')
    fi

    echo "Temporary credentials have been set. Use --profile ${2} to use your temporary credentials."

}

_get_policies(){

  if [[ "${1:-}" =~ ^-f|--federated$ ]]
  then
    json=`cognitocurl --cognitoclient $user_pool_client_id --userpool $user_pool_id --hostedui hostedui.json --run "curl -X GET $api_url'policies'"`
  else
    json=`cognitocurl --cognitoclient $user_pool_client_id --userpool $user_pool_id --run "curl -X GET $api_url'policies'"`
  fi

  echo "These are the managed policy ARNs you can request: "
  echo $json
}

_request(){

  echo "Performing a new permission request to STS Broker based on permission_request.json file."

  if [[ "${1:-}" =~ ^-f|--federated$ ]]
  then
    json=`cognitocurl --cognitoclient $user_pool_client_id --userpool $user_pool_id --hostedui hostedui.json --run "curl -X POST $api_url'credentials/request' -H 'content-type: application/json' --data @permission_request.json"`
  else
    json=`cognitocurl --cognitoclient $user_pool_client_id --userpool $user_pool_id --run "curl -X POST $api_url'credentials/request' -H 'content-type: application/json' --data @permission_request.json"`
  fi

  echo $json

}

_open_console(){

    python3 -m webbrowser $SIGNIN_URL
}

_main() {
    _initialize
    if [[ "${1:-}" =~ ^-h|--help$ ]]
    then
      _print_help
    elif [[ "${1:-}" =~ ^policies$ ]]
    then
      _get_policies $2
    elif [[ "${1:-}" =~ ^request$ ]]
    then
      _request $2
    elif [[ "${1:-}" =~ ^retrieve ]]
    then
      _export $2 $3
      if [[ "${4:-}" =~ ^-c|--console ]]
      then
      _open_console
      fi
    else
        _print_help
    fi
}

_main "$@"