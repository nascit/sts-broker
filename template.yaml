AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: STS Broker

Parameters:
  Stage:
    Description: Stage name (Dev, Prod)
    AllowedValues:
      - Dev
      - Prod
    Type: String
    Default: Dev
    ConstraintDescription: Must specify Prod or Dev.
  EvaluatePermissionRequestCodeUriBucket:
    Description: S3 Uri location for Lambda deployment package (S3 Bucket).
    Type: String
    Default: ''
  EvaluatePermissionRequestCodeUriKey:
    AllowedPattern: (^$|.*(zip))
    ConstraintDescription: This must be a .zip file.
    Description: S3 Uri location for Lambda deployment package (S3 Bucket key).
    Type: String
    Default: ''
  DefaultSecurityAdminEmailID:
    AllowedPattern: '[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}'
    ConstraintDescription: This is not a valid email id
    Description: Default Approver Email ID
    MaxLength: '64'
    MinLength: '1'
    Type: String
  CognitoUserPoolDomainName:
    Type: String
    Default: 'stsbroker'
  PoliciesTableName:
    Description: Name of the DynamoDB Table storing STS Broker policies
    Type: String
    Default: policies

Resources:
  STSBrokerCore:
    Type: AWS::Serverless::Application
    Properties:
      Location: sts-broker-core/packaged.yaml
      Parameters:
        Stage: !Ref Stage
        EvaluatePermissionRequestCodeUriBucket: !Ref EvaluatePermissionRequestCodeUriBucket
        EvaluatePermissionRequestCodeUriKey: !Ref EvaluatePermissionRequestCodeUriKey
        DefaultSecurityAdminEmailID: !Ref DefaultSecurityAdminEmailID
        CognitoUserPoolDomainName: !Ref CognitoUserPoolDomainName
        PoliciesTableName: !Ref PoliciesTableName
  AdminAPI:
    Type: AWS::Serverless::Application
    Properties:
      Location: admin/packaged.yaml
      Parameters:
        Stage: !Ref Stage
        CognitoUserPoolID: !GetAtt STSBrokerCore.Outputs.CognitoUserPoolID
        PoliciesTableName: !Ref PoliciesTableName
  NotifySlack:
    Type: AWS::Serverless::Application
    Properties:
      Location: notify-admin/packaged.yaml
      Parameters:
        ApprovalNotificationTopicARN: !GetAtt STSBrokerCore.Outputs.ApprovalNotificationTopicARN
        TeamPreferencesTableName: !GetAtt STSBrokerCore.Outputs.TeamPreferencesTableName
  NotifyUser:
    Type: AWS::Serverless::Application
    Properties:
      Location: notify-user/packaged.yaml
      Parameters:
        UserNotificationTopicARN: !GetAtt STSBrokerCore.Outputs.UserNotificationTopicARN

Outputs:
  STSBrokerAPI:
    Description: API Gateway endpoint URL for stage
    Value: !GetAtt STSBrokerCore.Outputs.STSBrokerAPI
  CognitoUserPoolID:
    Description: Cognito User Pool ID
    Value: !GetAtt STSBrokerCore.Outputs.CognitoUserPoolID
  CognitoUserPoolClientID:
    Description: Cognito User Pool client
    Value: !GetAtt STSBrokerCore.Outputs.CognitoUserPoolClientID
  CognitoUserPoolDomain:
    Description: Cognito User Pool domain URL
    Value: !GetAtt STSBrokerCore.Outputs.CognitoUserPoolDomain
  ApproveRequestFunctionRoleARN:
    Description: ARN of the approval function. Must be included on the Assumed Role trust relationship.
    Value: !GetAtt STSBrokerCore.Outputs.ApproveRequestFunctionRoleARN